{"version":3,"file":"static/js/65.c0f3eeaa.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/Filter/Filter.styled.js","modules/Filter/Filter.jsx","modules/ContactForm/initialState.js","modules/ContactForm/fields.js","modules/ContactForm/ContactForm.styled.js","modules/ContactForm/ContactForm.jsx","shared/components/Buttons/ButtonClick.jsx","shared/components/ContactItem/ContactItem.styled.js","shared/components/ContactItem/ContactItem.jsx","shared/components/Modal/Modal.styled.js","shared/components/Modal/Modal.jsx","modules/ModalForm/fields.js","modules/ModalForm/ModalForm.jsx","modules/ContactList/ContactList.styled.js","modules/ContactList/ContactList.jsx","modules/PhoneBook/PhoneBook.staled.js","modules/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage/PhoneBookPage.jsx","shared/components/Buttons/ButtonSubmit.jsx","shared/components/Section/Section.styled.js","shared/components/Section/Section.jsx","shared/components/TextField/TextField.styled.js","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const getFilterContacts = ({ contacts: {contacts}, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getIsLoading = ({contacts}) => contacts.loading;\nexport const getError = ({contacts}) => contacts.error;\n","export const getFilter = store => store.filter;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport PropTypes from 'prop-types';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = ({ text }) => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const findByName = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const onBlur = () => dispatch(setFilter(''));\n\n  return (\n    <Label>\n      {text}\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        value={filter}\n        onChange={findByName}\n        onBlur={onBlur}\n      ></Input>\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    label: 'Name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    placeholder: 'Name',\n    required: true,\n  },\n\n  number: {\n    type: 'tel',\n    name: 'number',\n    label: 'Number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    placeholder: 'Number',\n    required: true,\n  },\n};\n\nexport default fields;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n  background-color: #000000;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const Form = styled.form`\n\n  max-width: 360px;\n  padding-right: 30px;\n  padding-left: 30px;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  border-radius: 30px;\n  background-color: #000000;\n`;\n","import { useDispatch } from 'react-redux';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport TextField from 'shared/components/TextField/TextField';\nimport fields from './fields';\nimport ButtonSubmit from 'shared/components/Buttons/ButtonSubmit';\nimport { Form } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(fetchAddContact(data));\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, number } = state;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={number} handleChange={handleChange} {...fields.number} />\n      <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { DeleteBtn } from './Button.styled.js';\n\nconst ButtonClick = ({ children, type, onClick }) => {\n  return (\n    <DeleteBtn onClick={onClick} type={type}>\n      {children}\n    </DeleteBtn>\n  );\n};\n\nexport default ButtonClick;\n\nButtonClick.propTypes = {\n  children: PropTypes.element.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']),\n  onClick: PropTypes.func,\n};\n\nButtonClick.defaultProps = {\n  type: 'button',\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-size: 18px;\n  margin-top: 2px;\n  margin-bottom: 5px;\n  max-width: 180px;\n`;\n\nexport const Number = styled.p`\n  font-size: 18px;\n  max-width: 180px;\n`;\n\nexport const ButtonsBox = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport ButtonClick from '../Buttons/ButtonClick';\nimport { Name, Number, ButtonsBox } from './ContactItem.styled';\nimport { ImUserMinus } from 'react-icons/im';\nimport { AiFillEdit } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\n\nconst ContactItem = ({ id, name, number, onDeleteContact, showContact }) => {\n  return (\n    <>\n      <div>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </div>\n      <ButtonsBox>\n        <ButtonClick\n          type=\"button\"\n          onClick={() => showContact(id, name, number)}\n        >\n          <IconContext.Provider value={{ color: '#fff', size: '20px' }}>\n            <AiFillEdit />\n          </IconContext.Provider>\n        </ButtonClick>\n        <ButtonClick type=\"button\" onClick={() => onDeleteContact(id)}>\n          <IconContext.Provider value={{ color: '#fff', size: '20px' }}>\n            <ImUserMinus />\n          </IconContext.Provider>\n        </ButtonClick>\n      </ButtonsBox>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 90000;\n  /* overflow-y: scroll; */\n  background-color: rgba(0, 0, 0, 0.2);\n  transition: opacity 250ms var(--time-function),\n    visibility 250ms var(--time-function);\n`;\n\nexport const ModalBox = styled.div`\n  @media screen and (max-width: 420px) {\n    max-width: 90%;\n  }\n  border-radius: 30px;\n  background-color: rgb(21, 62, 73);\n  color: #fff;\n  height: 390px;\n  width: 360px;\n  padding: 40px 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Close = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: rgb(29, 33, 39);\n`;\n","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalBox, Close } from './Modal.styled';\nimport { IoClose } from 'react-icons/io5';\nimport { IconContext } from 'react-icons';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ close, children }) => {\n  const closeModal = useCallback(\n    ({ target, currentTarget, code }) => {\n      if (target === currentTarget || code === 'Escape') {\n        close();\n      }\n    },\n    [close]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', closeModal);\n    return () => document.removeEventListener('keydown', closeModal);\n  }, [closeModal]);\n\n  return createPortal(\n    <Overlay onClick={closeModal}>\n      <Close onClick={close}>\n        <IconContext.Provider\n          value={{ style: { width: '30px', height: '30px', fill: 'white' } }}\n        >\n          <IoClose />\n        </IconContext.Provider>\n      </Close>\n      <ModalBox>{children}</ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  close: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    label: 'Name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    placeholder: 'Name',\n    required: true,\n  },\n\n  number: {\n    type: 'tel',\n    name: 'number',\n    label: 'Number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    placeholder: 'Number',\n    required: true,\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchEditContact } from 'redux/contacts/contacts-operations';\nimport fields from './fields';\nimport ButtonSubmit from 'shared/components/Buttons/ButtonSubmit';\nimport TextField from 'shared/components/TextField/TextField';\n\nconst ModalForm = ({ contact, close }) => {\n  const [state, setState] = useState({ ...contact });\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchEditContact(state));\n    setState({});\n    close();\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField\n        value={number}\n        handleChange={handleChange}\n        {...fields.number}\n      />\n      <ButtonSubmit type=\"submit\">Save contact</ButtonSubmit>\n    </form>\n  );\n};\n\nexport default ModalForm;\n\nModalForm.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n  close: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 300px;\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const List = styled.ul`\n  color: #fff;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { getFilterContacts } from 'redux/contacts/contacts-selectors';\nimport ContactItem from 'shared/components/ContactItem/ContactItem';\nimport Modal from 'shared/components/Modal/Modal';\nimport ModalForm from 'modules/ModalForm/ModalForm';\nimport { Item, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const [modalContact, setModalContact] = useState(null);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilterContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const showContact = (id, name, number) => {\n    const contact = { id, name, number };\n    setModalContact(contact);\n  };\n\n  const closeModal = () => {\n    setModalContact(null);\n  };\n\n  const elements = contacts.map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <ContactItem\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n          showContact={showContact}\n          id={id}\n        />\n        {modalContact && (\n          <Modal close={closeModal}>\n            <ModalForm contact={modalContact} close={closeModal} />\n          </Modal>\n        )}\n      </Item>\n    );\n  });\n\n  return <>{contacts.length > 0 && <List>{elements}</List>};</>;\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n\n  padding: 40px 30px;\n  max-width: 360px;\n  min-height: 386px;\n  background-color: #000000;\n  border-radius: 30px;\n`;\n\nexport const ManeBox = styled.div`\n  padding-top: 20px;\n  padding-bottom: 60px;\n  width: 100vw;\n\n`;\n","import { useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/contacts/contacts-selectors';\nimport Section from 'shared/components/Section/Section';\nimport Filter from 'modules/Filter/Filter';\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport ContactList from 'modules/ContactList/ContactList';\nimport Spinner from 'shared/components/Spinner/Spinner';\nimport { Box, ManeBox } from './PhoneBook.staled';\n\nconst PhoneBook = () => {\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <ManeBox>\n      {loading && !error && <Spinner />}\n      <Section title=\"Phone Book\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Box>\n          <Filter text=\"Find contacts by name\" />\n          <ContactList />\n        </Box>\n      </Section>\n    </ManeBox>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'modules/PhoneBook/PhoneBook';\n\nconst PhoneBookPage = () => {\n  return <PhoneBook />;\n};\n\nexport default PhoneBookPage;\n","import PropTypes from 'prop-types';\nimport { BtnSubmit } from './Button.styled.js';\n\nconst ButtonSubmit = ({ children, type, onSubmit }) => {\n  return (\n    <BtnSubmit onSubmit={onSubmit} type={type}>\n      {children}\n    </BtnSubmit>\n  );\n};\n\nexport default ButtonSubmit;\n\nButtonSubmit.propTypes = {\n  children: PropTypes.elementType.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']).isRequired,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ManeSection = styled.section`\n  width: 100vw;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 20px;\n  margin: auto;\n  border: none;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-bottom: 40px;\n  padding-top: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { ManeSection, Title } from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <ManeSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </ManeSection>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Input, Label } from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  props: PropTypes.any,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["getFilterContacts","contacts","filter","normalizedFilter","toLowerCase","contact","name","includes","getIsLoading","loading","getError","error","getFilter","store","Input","styled","Label","text","useSelector","dispatch","useDispatch","type","placeholder","value","onChange","e","setFilter","currentTarget","onBlur","number","label","pattern","title","required","Form","useForm","initialState","onSubmit","data","fetchAddContact","state","handleChange","handleSubmit","TextField","fields","ButtonSubmit","ButtonClick","children","onClick","defaultProps","Name","Number","ButtonsBox","id","onDeleteContact","showContact","color","size","Overlay","ModalBox","Close","modalRoot","document","querySelector","close","closeModal","useCallback","target","code","useEffect","addEventListener","removeEventListener","createPortal","style","width","height","fill","useState","setState","prevState","preventDefault","fetchEditContact","Item","List","modalContact","setModalContact","fetchContacts","fetchDeleteContact","elements","map","length","Box","ManeBox","Spinner","Section","ManeSection","Title","props","useMemo","nanoid","htmlFor","checked","newValue"],"sourceRoot":""}